{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/utils/object.ts","webpack:///./src/component/base.ts","webpack:///./src/index.ts","webpack:///./src/app/index.ts","webpack:///./src/app/annotations.ts","webpack:///./src/app/app.interface.ts","webpack:///./src/component/index.ts","webpack:///./src/component/decorators.ts","webpack:///./src/component/component.ts","webpack:///./src/page/index.ts","webpack:///./src/page/decorators.ts","webpack:///./src/page/page.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","keysOf","filter","result","push","selectObject","obj","items","Array","isArray","length","reduce","Base","__export","annotations_1","app","app_interface_1","IApp","object_1","constructor","instance","App","decorators_1","component","method","ccomponent","observer","component_1","BaseComponent","cb","options","methods","assign","Component","target","descriptor","fields","observers","_super","__extends","page","cpage","page_1","BasePage","Page"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","\ndeclare type Predicate<T> = (val: T) => boolean;\n\n/**\n * 遍历对象成员，获取对象符合条件的成员名称\n * @param object 要遍历的对象\n * @param filter 筛选条件\n */\nexport function keysOf<T = any>(object: T, filter?: Predicate<string>): string[] {\n    if (!object) { return []; }\n    const result = [];\n    for (const key in object) {\n        if (typeof filter === \"function\") {\n            if (filter(key)) {\n                result.push(key);\n            }\n        } else {\n            result.push(key);\n        }\n    }\n    return result;\n}\n\n/**\n * 根据条件从一个对象中选择部分属性组成一个新的对象\n * @param obj 要投影的对象\n * @param filter 要过滤的条件，可以是函数或者是包含键名的字符串数组\n */\nexport function selectObject<T extends Record<string, any> = any\n>(obj: T, filter: string[] | Predicate<string>): Partial<T> {\n    if (!obj) { return obj; }\n    if (typeof filter === \"function\") {\n        const items = keysOf(obj, filter);\n        return selectObject(obj, items);\n    } else if (Array.isArray(filter) && filter.length) {\n        return filter.reduce((result: any, key: string) => {\n            if (key in obj) {\n                result[key] = obj[key];\n            }\n            return result;\n        }, {});\n    } else {\n        return obj;\n    }\n}\n","/**\n * 组件基础类型，可以被页面和组件共用\n * Component data, including internal data and property values\n */\nexport abstract class Base<D> implements Record<string, any> {\n  /**\n   * 组件数据，包括内部数据和属性值\n   */\n  public data: D;\n  /**\n   * Set data and perform view layer rendering\n   * 设置data并执行视图层渲染\n   * @param data 这次要改变的数据 The data to be changed this time\n   * @param callback setData引起的界面更新渲染完毕后的回调函数 The callback function after setData been called.\n   */\n  public setData: <K extends keyof D>(data: D | Pick<D, K> | Record<string, any>, callback?: () => void) => void;\n}\n","export * from \"./app/index\";\nexport * from \"./component/index\";\nexport * from \"./page/index\";\n","export { app } from \"./annotations\";\nexport { IApp } from \"./app.interface\";\n","import { selectObject } from \"../utils/object\";\nimport { IApp } from \"./app.interface\";\n\ndeclare function App(options: IApp): void;\n\nexport function app(constructor: new (...args: any[]) => IApp) {\n    const instance = new constructor();\n    const result = selectObject(instance, (key) => key !== \"constructor\");\n    App(result);\n}\n","export interface ILaunchOptions {\n    query: number;\n}\n\nexport interface IReferrerInfo {\n    /** 来源小程序或公众号或App的 appId */\n    appId: string;\n    /** 来源小程序传过来的数据，scene=1037或1038时支持 */\n    extraData?: any;\n}\n\nexport interface ILaunchShowOption {\n    /** 打开小程序的路径 */\n    path: string;\n    /** 打开小程序的query */\n    query: Record<string, any>;\n    /** 打开小程序的场景值 */\n    scene: number;\n    /** shareTicket，详见 [获取更多转发信息]((转发#获取更多转发信息)) */\n    shareTicket: string;\n    /** 当场景为由从另一个小程序或公众号或App打开时，返回此字段 */\n    referrerInfo?: IReferrerInfo;\n}\n\nexport interface IPageNotFoundOption {\n    /** 不存在页面的路径 */\n    path: string;\n    /** 打开不存在页面的 query */\n    query: Record<string, any>;\n    /** 是否本次启动的首个页面（例如从分享等入口进来，首个页面是开发者配置的分享页面） */\n    isEntryPage: boolean;\n}\n\nexport class IApp implements Record<string, any> {\n    /** 生命周期回调—监听小程序初始化\n     *\n     * 小程序初始化完成时触发，全局只触发一次。\n     */\n    public onLaunch?(options?: ILaunchShowOption): void;\n    /** 生命周期回调—监听小程序显示\n     *\n     * 小程序启动，或从后台进入前台显示时\n     */\n    public onShow?(options?: ILaunchShowOption): void;\n    /** 生命周期回调—监听小程序隐藏\n     *\n     * 小程序从前台进入后台时\n     */\n    public onHide?(): void;\n    /** 错误监听函数\n     *\n     * 小程序发生脚本错误，或者 api\n     */\n    public onError?(/** 错误信息，包含堆栈 */error?: string): void;\n    /** 页面不存在监听函数\n     *\n     * 小程序要打开的页面不存在时触发，会带上页面信息回调该函数\n     *\n     * **注意：**\n     * 1. 如果开发者没有添加 `onPageNotFound` 监听，当跳转页面不存在时，将推入微信客户端原生的页面不存在提示页面。\n     * 2. 如果 `onPageNotFound` 回调中又重定向到另一个不存在的页面，将推入微信客户端原生的页面不存在提示页面，并且不再回调 `onPageNotFound`。\n     *\n     * 最低基础库： 1.9.90\n     */\n    public onPageNotFound?(options?: IPageNotFoundOption): void;\n}\n","export { component, method, ccomponent, observer } from \"./decorators\";\nexport { BaseComponent } from \"./component\";\nexport { IComponent } from \"./component.interface\";\nexport { IComponentOptions } from \"./component.options.interface\";\nexport { IProperty } from \"./property.interface\";\n","import { selectObject } from \"../utils/object\";\nimport { BaseComponent } from \"./component\";\nimport { IComponent } from \"./component.interface\";\nimport { IComponentOptions } from \"./component.options.interface\";\n\ndeclare function Component(options: IComponent): void;\n\n/**\n * 将当前成员标记为组件的方法\n */\nexport function method(target: any, name: string, descriptor: PropertyDescriptor) {\n  target.methods = target.methods || {};\n  target.methods[name] = descriptor.value;\n}\n\n/**\n * 组件数据字段监听器，用于监听 properties 和 data 的变化。\n * 从小程序基础库版本 2.6.1 开始支持。\n * @param fields 要监听字段，比如 'some.subfiel',仅使用通配符'**'可以监听全部。\n */\nexport function observer(fields: string) {\n  return function(target: any, name: string, descriptor: PropertyDescriptor) {\n    target.observers = target.observers || {};\n    target.observers[fields] = descriptor.value;\n  };\n}\n\n/**\n * 自定义装饰器\n * @param cb 自定义函数用来修改当前组件成员\n */\nexport function ccomponent<C = BaseComponent>(cb?: (component: C & IComponent) => any) {\n  return function <T = any>(options?: IComponentOptions<T>) {\n    return function(constructor: new (...args: any[]) => C & IComponent) {\n      const instance = new constructor();\n      const obj = cb ? cb(instance) : instance;\n      const methods = (instance as any).methods || {};\n      const result = selectObject(obj, (key) => key !== \"constructor\" && !(key in methods));\n      Object.assign(result, options);\n      Component(result);\n    };\n  };\n}\n\n/**\n * 组件装饰器\n * @param options 组件装饰器参数\n */\nexport function component<T = any>(options?: IComponentOptions<T>) {\n  return ccomponent()(options);\n}\n","import { Base } from \"./base\";\n/**\n * 组件基础类型，包含组件所有可用的属性和方法\n */\nexport abstract class BaseComponent<D = any> extends Base<D> implements Record<string, any> {\n  /**\n   * 组件的文件路径\n   */\n  public is: string;\n  /**\n   * 节点id\n   */\n  public id: string;\n  /**\n   * 节点dataset\n   */\n  public dataset: string;\n  /**\n   * 检查组件是否具有 behavior （检查时会递归检查被直接或间接引入的所有behavior）\n   */\n  public hasBehavior: (behavior: any) => boolean;\n  /**\n   * 触发事件，参见 组件事件\n   */\n  public triggerEvent: (name: string, detail?: object, options?: object) => void;\n  /**\n   * 创建一个 SelectorQuery 对象，选择器选取范围为这个组件实例内\n   */\n  public createSelectorQuery: () => any;\n  /**\n   * 创建一个 IntersectionObserver 对象，选择器选取范围为这个组件实例内\n   */\n  public createIntersectionObserver: () => any;\n  /**\n   * 使用选择器选择组件实例节点，返回匹配到的第一个组件实例对象（会被 wx://component-export 影响）\n   */\n  public selectComponent: (selector: string) => any;\n  /**\n   * 使用选择器选择组件实例节点，返回匹配到的全部组件实例对象组成的数组\n   */\n  public selectAllComponents: (selector: string) => any[];\n  /**\n   * 获取这个关系所对应的所有关联节点，参见 组件间关系\n   */\n  public getRelationNodes: (relationKey: string) => any;\n  /**\n   * 立刻执行 callback ，其中的多个 setData 之间不会触发界面绘制（只有某些特殊场景中需要，如用于在不同组件同时 setData 时进行界面绘制同步）\n   */\n  public groupSetData: (callback: () => void) => void;\n}\n","export { page, cpage } from \"./decorators\";\nexport { IPage } from \"./page.interface\";\nexport { BasePage } from \"./page\";\n","import { selectObject } from \"../utils/object\";\nimport { BasePage } from \"./page\";\nimport { IPage } from \"./page.interface\";\n\ndeclare function Page(options: IPage): void;\n\n/**\n * 自定义页面装饰器\n * @param cb 自定义函数用来修改当前页面成员\n */\nexport function cpage<P = BasePage>(cb?: (page: P & IPage) => any) {\n  return function(constructor: new (...args: any[]) => P & IPage) {\n    const instance = new constructor();\n    const obj = typeof cb === \"function\" ? cb(instance) : instance;\n    const result = selectObject(obj, (key) => key !== \"constructor\");\n    Page(result);\n  };\n}\n\n/**\n * 页面装饰器\n */\nexport function page(constructor: new (...args: any[]) => BasePage & IPage) {\n  return cpage()(constructor);\n}\n","import { Base } from \"../component/base\";\n\n/**\n * 页面基础类型，包含所有的属性和方法\n * The base type of page which including all properties and methods\n */\nexport abstract class BasePage<D = any> extends Base<D> implements Record<string, any> {\n  /**\n   * 当前页面的路径\n   * The path to the current page\n   */\n  public route: string;\n}\n"],"sourceRoot":""}